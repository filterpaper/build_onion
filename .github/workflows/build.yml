name: Build Onion
on:
  push:
  workflow_dispatch:

env:
  REPOSITORY: "OnionUI/Onion"
  BRANCH: "main"

jobs:
  build:
    name: Build Onion
    runs-on: ubuntu-latest
    container:
      image: aemiii91/miyoomini-toolchain:latest
      options: --user root

    steps:
    - name: Checkout OnionOS
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPOSITORY }}
        ref: ${{ env.BRANCH }}
        fetch-depth: 0
        submodules: recursive

    - name: Configure git
      run: git config --global --add safe.directory /__w/Onion/Onion

    - name: Patch Retroarch exit and savestate
      run: |
        wget -qO - https://github.com/OnionUI/Onion/pull/1819.diff | git apply
        wget -qO - https://github.com/OnionUI/Onion/pull/1809.diff | git apply

    - name: Configure Drastic defaults
      env:
        DS_PATH: static/packages/Emu/Nintendo - DS (Drastic)/Emu/NDS
      run: |
        sed -i 's/cpuclock 1500/cpuclock 1600/' "$DS_PATH/launch.sh"
        sed -i \
            -e 's/"theme":./"theme":7/' \
            -e 's/"mode":./"mode":1/' \
            -e 's/"alpha":./"alpha":5/' \
            -e 's/"border":./"border":5/' \
            -e 's/states\\\/Drastic/saves/' \
            "$DS_PATH/resources/settings.json"

    - name: Configure Retroarch defaults
      env:
        RA_FILE: static/configs/RetroArch/.retroarch/retroarch.cfg
      run: |
        echo "1600" > static/configs/RetroArch/cpuclock.txt
        sed -i \
            -e 's/content_runtime_log.*/content_runtime_log = "false"/' \
            -e 's/quick_menu_show_cheats.*/quick_menu_show_cheats = "true"/' \
            -e 's/apply_cheats_after_load.*/apply_cheats_after_load = "true"/' \
            -e 's/apply_cheats_after_toggle.*/apply_cheats_after_toggle = "true"/' \
            -e 's/sort_savefiles_enable.*/sort_savefiles_enable = "false"/' \
            -e 's/sort_savestates_enable.*/sort_savestates_enable = "false"/' \
            $RA_FILE

    - name: Configure gpSP overrides
      env:
        CFG_FILE: static/configs/Saves/CurrentProfile/config/gpSP/gpSP.cfg
        OPT_FILE: static/configs/Saves/CurrentProfile/config/gpSP/gpSP.opt
      run: |
        cat << EOF >> $CFG_FILE && sort -o $CFG_FILE $CFG_FILE
        input_overlay_opacity = "0.600000"
        video_filter = ":/.retroarch/filters/video/Normal/Normal3x.filt"
        input_overlay = ":/.retroarch/overlay/GBA/Perfect_GBA(read-instructions)/Perfect_GBA-centered.cfg"
        EOF
        sed -i 's/gpsp_color_correction.*/gpsp_color_correction = "enabled"/' $OPT_FILE

    - name: Configure PCSX-ReARMed overrides
      env:
        CFG_FILE: static/configs/Saves/CurrentProfile/config/PCSX-ReARMed/PCSX-ReARMed.cfg
        OPT_FILE: static/configs/Saves/CurrentProfile/config/PCSX-ReARMed/PCSX-ReARMed.opt
      run: |
        cat << EOF >> $CFG_FILE && sort -o $CFG_FILE $CFG_FILE
        input_overlay_opacity = "0.800000"
        video_scale_integer = "true"
        input_overlay = ":/.retroarch/overlay/4-3/CRT/Perfect_CRT(read-instructions)/Perfect_CRT-noframe.cfg"
        EOF
        sed -i 's/pcsx_rearmed_dithering.*/pcsx_rearmed_dithering = "enabled"/' $OPT_FILE

    - name: Configure Snes9x overrides
      env:
        CFG_FILE: static/configs/Saves/CurrentProfile/config/Snes9x/Snes9x.cfg
        EMU_FILE: static/packages/Emu/Nintendo - SNES (Beetle Supafaust)/Emu/SFC/launch.sh
      run: |
        cat << EOF >> $CFG_FILE && sort -o $CFG_FILE $CFG_FILE
        input_overlay_opacity = "0.800000"
        video_dingux_ipu_filter_type = "1"
        video_filter = ":/.retroarch/filters/video/Normal/Normal2x.filt"
        input_overlay = ":/.retroarch/overlay/4-3/CRT/Perfect_CRT(read-instructions)/Perfect_CRT-noframe.cfg"
        EOF
        sed -i 's/mednafen_supafaust_/snes9x_/' "$EMU_FILE"

    - name: Setup build variable
      run: echo "BUILD_VERSION=$(make version | sed 's/-.*//')" >> $GITHUB_ENV

    - name: Build Onion-v${{ env.BUILD_VERSION }}
      shell: bash
      run: |
        source /root/.bashrc
        VERSION_OVERRIDE=${{ env.BUILD_VERSION }} make release

    - name: Upload release
      uses: actions/upload-artifact@main
      with:
        retention-days: 1
        name: Onion-v${{ env.BUILD_VERSION }}
        path: release/Onion-v${{ env.BUILD_VERSION }}.zip

  release:
    needs: build
    uses: filterpaper/scripts/.github/workflows/publish-artifact.yml@main
    with:
      release_name: OnionOS
      release_tag: latest

  purge:
    uses: filterpaper/scripts/.github/workflows/purge-workflow.yml@main
    with:
      purge-age: 3
      delete-all-completed: false
      delete-all-incomplete: false
